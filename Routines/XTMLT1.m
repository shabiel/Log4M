XTMLT1 ;JLI/FO-OAK TEST ROUTINE FOR LOGGER ;2/14/08  10:52
 ;;7.3;TOOLKIT;**???**;Apr 25,1995
 D EN^%ut("ZZUTXTL1",2)
 ;
CHECKIEN() ; returns internal entry number of ZZUTXTL1
 N ZZUTXTL1,FDA
 S ZZUTXTL1=$$FIND1^DIC(8992.7,"","X","ZZUTXTL1")
 I ZZUTXTL1'>0 S FDA(8992.7,"+1,",.01)="ZZUTXTL1" D UPDATE^DIE("","FDA") S ZZUTXTL1=$$FIND1^DIC(8992.7,"","X","ZZUTXTL1")
 Q ZZUTXTL1
 ;
STARTUP ;
 N ZZUTIEN,ROOT
 S ZZUTIEN=$$CHECKIEN()
 S ROOT=$NA(^TMP("XTSAVECOPY",$J))
 D GETS^DIQ(8992.7,ZZUTIEN_",",".02:.08","I",ROOT)
 Q
 ;
SHUTDOWN ;
 N XTI,XTVAL,XTFDA,ZZUTIEN,ROOT
 S ZZUTIEN=$$CHECKIEN()
 S ROOT=$NA(^TMP("XTSAVECOPY",$J,8992.7,ZZUTIEN_","))
 F XTI=.02:.01:.08 S XTVAL=$G(@ROOT@(XTI,"I")) S XTFDA(8992.7,ZZUTIEN_",",XTI)=XTVAL
 D FILE^DIE("I","XTFDA")
 K ^TMP("XTSAVECOPY",$J)
 Q
 ;
SETFDA(IEN,FDA,ACTIVE,TYPE,LEVEL,ROUFILTR,USRFILTR,OUTTYPE,OUTSPECS) ; FDA passed by reference
 S IEN=IEN_","
 S FDA(8992.7,IEN,.02)=ACTIVE
 S FDA(8992.7,IEN,.03)=TYPE
 S FDA(8992.7,IEN,.04)=LEVEL
 S FDA(8992.7,IEN,.05)=ROUFILTR
 S FDA(8992.7,IEN,.06)=USRFILTR
 S FDA(8992.7,IEN,.07)=$G(OUTTYPE)
 S FDA(8992.7,IEN,.08)=$G(OUTSPECS)
 Q
 ;
NORMAL ;
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","","")
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS+1^ZZUTXTL1",1))["ENTERED TESTS","INFO-ENTERED TESTS FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(2,"TESTS+2^ZZUTXTL1",1))["DUZ: "_DUZ,"BASIC DUZ VARIABLE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(3,"TESTS+3^ZZUTXTL1",2))["DUZ(0): "_DUZ(0),"DUZ VARIABLE ARRAY FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(4,"TESTS+9^ZZUTXTL1",1))["^TMP("_$J_",""VALUE""): VALUE","GLOBAL NODE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",1))["DUZ: "_DUZ,"VARIABLE AND GLOBAL FAILED VARIABLE")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",2))["^TMP("_$J_",""VALUE""): VALUE","VARIABALE AND GLOBAL FAILED GLOBAL")
 D CHKTF^%ut($G(@XTMLBASE@(6,"TESTS+11^ZZUTXTL1",4))[",1): VALUE1,1","GLOBAL ARRAY FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
INFOONLY ;
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","INFO","","")
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS+1^ZZUTXTL1",1))["ENTERED TESTS","INFO - ENTERED TESTS FAILED")
 D CHKTF^%ut($D(@XTMLBASE@(2,"TESTS+2^ZZUTXTL1",1))=0,"DUZ LISTED DEBUG - NOT INFO ONLY")
 D CHKTF^%ut($G(@XTMLBASE@(3,"TESTS+13^ZZUTXTL1",1))["EXITING TESTS","INFO - EXITING TESTS FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
CURRUSER ;
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","",DUZ)
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut(XTMLBASE'="","XTMLBASE RETURNED NULL")
 I XTMLBASE="" Q
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS+1^ZZUTXTL1",1))["ENTERED TESTS","INFO-ENTERED TESTS FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(2,"TESTS+2^ZZUTXTL1",1))["DUZ: "_DUZ,"BASIC DUZ VARIABLE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(3,"TESTS+3^ZZUTXTL1",2))["DUZ(0): "_DUZ(0),"DUZ VARIABLE ARRAY FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(4,"TESTS+9^ZZUTXTL1",1))["^TMP("_$J_",""VALUE""): VALUE","GLOBAL NODE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",1))["DUZ: "_DUZ,"VARIABLE AND GLOBAL FAILED VARIABLE")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",2))["^TMP("_$J_",""VALUE""): VALUE","VARIABALE AND GLOBAL FAILED GLOBAL")
 D CHKTF^%ut($G(@XTMLBASE@(6,"TESTS+11^ZZUTXTL1",4))[",1): VALUE1,1","GLOBAL ARRAY FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
OTHRUSER ;
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","",DUZ+1)
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut(XTMLBASE="","USER FILTERED TESTS FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
LIMITROU ;
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","ZZUTXTL2","")
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS1+1^ZZUTXTL2",1))["ENTERED TESTS1","ROUTINE FILTERED TESTS FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
EMAIL ; must be activated by commenting next line to run - this is done to prevent many e-mails one for each time the unit tests are run.
 W !,"[E-MAIL test can be activated by commenting out EMAIL+1^ZZUTXTL1]" Q  ; comment out this line to have it send an e-mail with the logging results to this user
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","","","M","")
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS+1^ZZUTXTL1",1))["ENTERED TESTS","INFO-ENTERED TESTS FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(2,"TESTS+2^ZZUTXTL1",1))["DUZ: "_DUZ,"BASIC DUZ VARIABLE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(3,"TESTS+3^ZZUTXTL1",2))["DUZ(0): "_DUZ(0),"DUZ VARIABLE ARRAY FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(4,"TESTS+9^ZZUTXTL1",1))["^TMP("_$J_",""VALUE""): VALUE","GLOBAL NODE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",1))["DUZ: "_DUZ,"VARIABLE AND GLOBAL FAILED VARIABLE")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",2))["^TMP("_$J_",""VALUE""): VALUE","VARIABALE AND GLOBAL FAILED GLOBAL")
 D CHKTF^%ut($G(@XTMLBASE@(6,"TESTS+11^ZZUTXTL1",4))[",1): VALUE1,1","GLOBAL ARRAY FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
PRINT ;
 W !,"[The print exit option can be activated by commenting out PRINT+1^ZZUTXTL1]",! Q
 W !,"The following is the output from PRINT output type",!
 N ZZUTIEN,ZZUTFDA,XTMLBASE
 S ZZUTIEN=$$CHECKIEN() Q:ZZUTIEN'>0
 D SETFDA(ZZUTIEN,.ZZUTFDA,"E","G,ZZUTXTL1","DEBUG","","","P","")
 D FILE^DIE("I","ZZUTFDA")
 K ^XTMP("ZZUTXTL1",DUZ)
 S XTMLBASE=$$FILEINIT^XTMLOG("ZZUTXTL1")
 D TESTS
 D ENDLOG^XTMLOG("ZZUTXTL1")
 W !!,"End of output from PRINT output type",!
 S XTMLBASE=$$GETBASE()
 D CHKTF^%ut($G(@XTMLBASE@(1,"TESTS+1^ZZUTXTL1",1))["ENTERED TESTS","INFO-ENTERED TESTS FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(2,"TESTS+2^ZZUTXTL1",1))["DUZ: "_DUZ,"BASIC DUZ VARIABLE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(3,"TESTS+3^ZZUTXTL1",2))["DUZ(0): "_DUZ(0),"DUZ VARIABLE ARRAY FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(4,"TESTS+9^ZZUTXTL1",1))["^TMP("_$J_",""VALUE""): VALUE","GLOBAL NODE FAILED")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",1))["DUZ: "_DUZ,"VARIABLE AND GLOBAL FAILED VARIABLE")
 D CHKTF^%ut($G(@XTMLBASE@(5,"TESTS+10^ZZUTXTL1",2))["^TMP("_$J_",""VALUE""): VALUE","VARIABALE AND GLOBAL FAILED GLOBAL")
 D CHKTF^%ut($G(@XTMLBASE@(6,"TESTS+11^ZZUTXTL1",4))[",1): VALUE1,1","GLOBAL ARRAY FAILED")
 K ^XTMP("ZZUTXTL1",DUZ)
 Q
 ;
TESTS ;
 D INFO^XTMLOG("ENTERED TESTS")
 D DEBUG^XTMLOG("TEST1","DUZ")
 D DEBUG^XTMLOG("TEST2","DUZ",1)
 K ^TMP($J)
 S ^TMP($J,"VALUE")="VALUE"
 S ^TMP($J,"VALUE1")="VALUE1"
 S ^TMP($J,"VALUE1",1)="VALUE1,1"
 S ^TMP($J,"VALUE2")="VALUE2"
 D DEBUG^XTMLOG("TEST3",$NA(^TMP($J,"VALUE")))
 D DEBUG^XTMLOG("TEST4","DUZ,"_$NA(^TMP($J,"VALUE")))
 D DEBUG^XTMLOG("TEST5",$NA(^TMP($J)),1)
 D TESTS1^ZZUTXTL2
 D INFO^XTMLOG("EXITING TESTS")
 Q
 ;
GETBASE() ;
 N X1,X2,X3,X4,X5
 S X1=$O(^XTMP("ZZUTXTL1",DUZ,"")) Q:X1="" "" ; START DATE/TIME
 S X2=$O(^XTMP("ZZUTXTL1",DUZ,X1,"")) Q:X2="" "" ;$J
 S X3=$O(^XTMP("ZZUTXTL1",DUZ,X1,X2,"")) Q:X3="" "" ;CURRENT DATE/TIME
 S X4=$O(^XTMP("ZZUTXTL1",DUZ,X1,X2,X3,"")) Q:X4="" "" ;LOG ENTRY NUMBER
 S X5=$O(^XTMP("ZZUTXTL1",DUZ,X1,X2,X3,X4,"")) Q:X5="" "" ;TAG^ROUTINE LOGGED FROM
 Q $NA(^XTMP("ZZUTXTL1",DUZ,X1,X2,X3))
 ;
XTROU ;
 ;;ZZUTXTL2;USED FOR TESTING ROUTINE FILTER, CURRENTLY NO TESTS
 ;;ZZUTXTL3;PARSING, ETC.
 ;;ZZUTXTL4;FORMAT HANDLING
XTENT ;
 ;;NORMAL;
 ;;INFOONLY;
 ;;CURRUSER;
 ;;OTHRUSER;
 ;;LIMITROU;
 ;;EMAIL;
 ;;PRINT;
